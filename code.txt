#include <mega8.h>
#include <stdlib.h>

// Alphanumeric LCD functions
#include <alcd.h>
#include <delay.h>

// Standard Input/Output functions
#include <stdio.h>

char location[24];
char key()
{   
char a='$';
while(1)
    {
        PORTC.3=0;PORTC.4=1;PORTC.5=1;
delay_ms(10);
if(PINB.4==0)
        {
          a='1';
break;
        }

if(PINB.5==0)
        {
          a='4';
break;
        }

if(PINC.1==0)
        {
          a='7';
break;
        } 

if(PINC.2==0)
        {
          a='*';
break;
        }

        PORTC.3=1;PORTC.4=0;PORTC.5=1;
delay_ms(10);
if(PINB.4==0)
        {
          a='2';
break;
        }

if(PINB.5==0)
        {
          a='5';
break;
        }

if(PINC.1==0)
        {
          a='8';
break;
        } 

if(PINC.2==0)
        {
          a='0';
break;
        }


        PORTC.3=1;PORTC.4=1;PORTC.5=0;
delay_ms(10);
if(PINB.4==0)
        {
          a='3';
break;
        }

if(PINB.5==0)
        {
          a='6';
break;
        }

if(PINC.1==0)
        {
          a='9';
break;
        } 

if(PINC.2==0)
        {
          a='#';
break;
        }         
    }

return a;
}

voidgps_read()
{
inti,count;
chara,flush;
delay_ms(500);
for(i=0;i<1000;i++)
    {
flush=UDR;
    }

while(1)
        {
        a=getchar();
if (a=='$')
            {       
            a=getchar();
if(a=='G')
                {
                a=getchar();
if(a=='P')
                    {
                    a=getchar();
if(a=='G')
                        {
                        a=getchar();
if(a=='G')
                            {
                            a=getchar();
if(a=='A')
                                {
count=0;
while(count<2)
                                    {
                                    a=getchar();
if(a==',')
                                        {
count++;
                                        }
                                    } 

for(i=0;i<24;i++)
                                    {
location[i]=getchar();
                                    }
break;
                                }
                            }
                        }
                    }
                }
            }
        } 
return;
}

voidgsm_send()
{

    char at0[]={'a','t','+','c','m','g','s','=','"','8','8','7','1','9','5','3','2','3','1','"'};
    char at1[]={'a','t','+','c','m','g','s','=','"','9','0','3','9','4','9','2','9','5','1','"'};
    char at2[]={'a','t','+','c','m','g','s','=','"','9','0','9','8','5','0','4','4','3','3','"'};
char msg1[]="Alert! Bank Locker opened @ location : ";
inti,k;
char flush;

for (k=0;k<3;k++)
    {

delay_ms(500);
for(i=0;i<1000;i++)
        {
flush=UDR;
        }
delay_ms(500);

putchar('a');
putchar('t');
putchar('e');
putchar('0');
putchar(13);

delay_ms(100);
putchar('a');
putchar('t');
putchar('+');
putchar('c');
putchar('m');
putchar('g');
putchar('f');
putchar('=');
putchar('1');
putchar(13);
delay_ms(100);

for(i=0;i<20;i++)
        {       
if(k==0)
putchar(at0[i]);


if(k==1)
putchar(at1[i]);


if(k==2)
putchar(at2[i]);
        }
putchar(13);
delay_ms(100);  

for(i=0;i<=39;i++)
putchar(msg1[i]);

putchar(location[0]);
putchar(location[1]);
putchar(' ');
putchar('D');
putchar('e');
putchar('g');
putchar('r');
putchar('e');
putchar('e');
putchar(' ');
putchar(location[2]);
putchar(location[3]);
putchar(location[4]);
putchar(location[5]);
putchar(location[6]);
putchar(location[7]);
putchar(location[8]);
putchar(' ');
putchar('M');
putchar('i');
putchar('n');
putchar('u');
putchar('t');
putchar('e');
putchar('s'); 
putchar(' ');

putchar('N');
putchar('o');
putchar('r');
putchar('t');
putchar('h');
putchar(' ');
        // putchar(13);

putchar(location[12]);
putchar(location[13]);
putchar(location[14]);
putchar(' ');
putchar('D');
putchar('e');
putchar('g');
putchar('r');
putchar('e');
putchar('e');
putchar(' ');
putchar(location[15]);
putchar(location[16]);
putchar(location[17]);
putchar(location[18]);
putchar(location[19]);
putchar(location[20]);
putchar(' ');
putchar('M');
putchar('i');
putchar('n');
putchar('u');
putchar('t');
putchar('e');
putchar('s'); 
putchar(' ');

putchar('E');
putchar('a');
putchar('s');
putchar('t');
putchar(13); 

delay_ms(200);
putchar(26);
    }

}



void main(void)
{
inti,pass_length;
charx,pass[16];
int temp=0,d1,d2,z;
char c[2], d[2];
// Declare your local variables here

// Input/Output Ports initialization
// Port B initialization
// Func7=In Func6=In Func5=In Func4=In Func3=In Func2=Out Func1=Out Func0=In 
// State7=T State6=T State5=P State4=P State3=T State2=0 State1=0 State0=T 
PORTB=0x30;
DDRB=0b00001100;

// Port C initialization
// Func6=In Func5=Out Func4=Out Func3=Out Func2=In Func1=In Func0=Out 
// State6=T State5=0 State4=0 State3=0 State2=P State1=P State0=0 
PORTC=0x06;
DDRC=0x39;

// Port D initialization
// Func7=In Func6=In Func5=Out Func4=In Func3=In Func2=In Func1=In Func0=In 
// State7=T State6=T State5=0 State4=T State3=T State2=T State1=T State0=T 
PORTD=0x00;
DDRD=0x20;

// USART initialization
// Communication Parameters: 8 Data, 1 Stop, No Parity
// USART Receiver: On
// USART Transmitter: On
// USART Mode: Asynchronous
// USART Baud Rate: 9600
UCSRA=0x00;
UCSRB=0x18;
UCSRC=0x86;
UBRRH=0x00;
UBRRL=0x33;

// Alphanumeric LCD initialization
// Connections are specified in the
// Project|Configure|CCompiler|Libraries|Alphanumeric LCD menu:
// RS - PORTB Bit 1
// RD - PORTB Bit 0
// EN - PORTD Bit 7
// D4 - PORTD Bit 6
// D5 - PORTD Bit 4
// D6 - PORTD Bit 3
// D7 - PORTD Bit 2
// Characters/line: 16
lcd_init(16);
delay_ms(1000);
lcd_clear();
gps_read();
lcd_puts(location);
delay_ms(3000);
while (1)
      {
      // Place your code here
lcd_clear();
lcd_putsf("Enter password");
lcd_gotoxy(0,1);

for(i=0;i<16;i++)
        {                   
            x=key();
if (x=='#')
            {
pass_length=i;
break;
            }
else
            {
pass[i]=x;
lcd_putchar(x); 
delay_ms(400);
            }
        }
delay_ms(1000);

if (pass_length!=4)
        {   
            PORTC.0=1;
lcd_clear();
lcd_putsf("Wrong Password");
delay_ms(1000);
            PORTC.0=0;      
temp++;  


if(temp==3)
                    { 
temp=0;
gps_read();
gsm_send();

for(z=30;z>=0;z--)
                      { 
lcd_clear();
lcd_gotoxy(0,0);
lcd_putsf("gate blocked");
                      d1=z/10;
                      d2=z%10;
itoa(d1,c);
itoa(d2,d);
lcd_gotoxy(14,0);
lcd_puts(c);
lcd_gotoxy(15,0);
lcd_puts(d);
delay_ms(1000);
                      }
                    } 
        }

        else if(pass[0]=='1' & pass[1]=='2' & pass[2]=='3' & pass[3]=='4')
        {
lcd_clear();
lcd_putsf("Correct Password");
gps_read();
gsm_send();
delay_ms(1000);
lcd_gotoxy(0,1);
lcd_putsf("Opening Locker!");
           PORTB.2=1; PORTB.3=0;
delay_ms(2000);
           PORTB.2=0; PORTB.3=0;
lcd_clear();
lcd_putsf("Locker opened!");
delay_ms(2000);
lcd_clear();
lcd_putsf("Press any key to exit") ;
key();
           PORTB.2=0; PORTB.3=1;
delay_ms(2000);
           PORTB.2=0; PORTB.3=0;
        }
else
        {  
temp++;
           PORTC.0=1;                   
lcd_clear();
lcd_putsf("Wrong Password");                      
delay_ms(2000);
           PORTC.0=0; 

if(temp==3)
                    {   
temp=0;
gps_read();
gsm_send();
for(z=30;z>=0;z--)
                      { 
lcd_clear();
lcd_gotoxy(0,0);
lcd_putsf("gate blocked");
                      d1=z/10;
                      d2=z%10;
itoa(d1,c);
itoa(d2,d);
lcd_gotoxy(14,0);
lcd_puts(c);
lcd_gotoxy(15,0);
lcd_puts(d);
delay_ms(1000);
                      }
                    } 
        }}}
